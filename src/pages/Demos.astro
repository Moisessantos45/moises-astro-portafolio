---
import { supabase } from "@/api/config";
import { fromToJsonMapDemo } from "@/service/data.service";
import type { Demo } from "@/types/demo";
import Layout from "../layouts/Layout.astro";
import Footer from "@/components/Footer.astro";

const getDemoList = async (): Promise<Demo[]> => {
  try {
    const { data, error } = await supabase.from("Url_video").select("*");

    if (error) throw error;
    const dataProjects = data.map((map) => fromToJsonMapDemo(map));
    return dataProjects;
  } catch (error) {
    return [];
  }
};

const data: Demo[] = await getDemoList().then((res) => res);

// Función para extraer el ID del video de YouTube desde la URL (incluyendo Shorts)
const getYouTubeId = (url: string): string => {
  // Expresión regular que maneja diferentes formatos de YouTube incluyendo Shorts
  const regExp =
    /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=|shorts\/)([^#&?]*).*/;
  const match = url.match(regExp);
  return match && match[2].length === 11 ? match[2] : "";
};
---

<Layout title="Video Demos">
  <main class="bg-[#0f172a] min-h-screen text-slate-300">
    <div class="relative overflow-hidden">
      <div
        class="absolute inset-0 bg-gradient-to-b from-cyan-500/10 to-transparent opacity-30 pointer-events-none"
      >
      </div>

      <section class="relative mx-auto max-w-screen-xl px-6 py-20">
        <div class="text-center mb-16">
          <h1
            class="text-5xl font-bold mb-4 text-transparent bg-clip-text bg-gradient-to-r from-sky-400 to-cyan-300"
          >
            Video Demos
          </h1>
          <p class="text-xl text-slate-400 max-w-2xl mx-auto">
            Explora los demos y proyectos en video que demuestran las
            tecnologías y soluciones desarrolladas
          </p>
        </div>

        {
          data.length === 0 ? (
            <div class="text-center py-20">
              <div class="p-8 bg-slate-800/50 backdrop-blur-sm rounded-2xl border border-slate-700/50 max-w-md mx-auto">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="w-16 h-16 text-slate-500 mx-auto mb-4"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"
                  />
                </svg>
                <h3 class="text-xl font-semibold text-slate-300 mb-2">
                  No hay demos disponibles
                </h3>
                <p class="text-slate-500">
                  Próximamente se añadirán nuevos videos de demostración
                </p>
              </div>
            </div>
          ) : (
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {data
                .filter((demo) => demo.status)
                .map((demo) => {
                  const videoId = getYouTubeId(demo.url);
                  return (
                    <article class="group bg-slate-800/50 backdrop-blur-sm rounded-2xl p-6 shadow-xl hover:shadow-cyan-500/10 transition-all duration-300 border border-slate-700/50 hover:border-cyan-500/30 hover:bg-slate-800/70">
                      <div class="aspect-video mb-4 rounded-xl overflow-hidden bg-slate-900/50">
                        {videoId ? (
                          <lite-youtube
                            videoid={videoId}
                            style="background-image: url(https://i.ytimg.com/vi/{videoId}/hqdefault.jpg);"
                            class="w-full h-full"
                          >
                            <div slot="playButton" class="lty-playbtn">
                              <svg
                                height="100%"
                                version="1.1"
                                viewBox="0 0 68 48"
                                width="100%"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="lty-large-play-button-bg"
                                  d="M66.52,7.74c-0.78-2.93-2.49-5.41-5.42-6.19C55.79,.13,34,0,34,0S12.21,.13,6.9,1.55 C3.97,2.33,2.27,4.81,1.48,7.74C0.06,13.05,0,24,0,24s0.06,10.95,1.48,16.26c0.78,2.93,2.49,5.41,5.42,6.19 C12.21,47.87,34,48,34,48s21.79-0.13,27.1-1.55c2.93-0.78,4.64-3.26,5.42-6.19C67.94,34.95,68,24,68,24S67.94,13.05,66.52,7.74z"
                                  fill="#f00"
                                />
                                <path d="M 45,24 27,14 27,34" fill="#fff" />
                              </svg>
                            </div>
                          </lite-youtube>
                        ) : (
                          <div class="w-full h-full flex items-center justify-center bg-slate-800/50">
                            <div class="text-center">
                              <svg
                                xmlns="http://www.w3.org/2000/svg"
                                class="w-12 h-12 text-slate-500 mx-auto mb-2"
                                fill="none"
                                viewBox="0 0 24 24"
                                stroke="currentColor"
                              >
                                <path
                                  stroke-linecap="round"
                                  stroke-linejoin="round"
                                  stroke-width="2"
                                  d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z"
                                />
                              </svg>
                              <p class="text-sm text-slate-500">
                                Video no disponible
                              </p>
                            </div>
                          </div>
                        )}
                      </div>

                      <div class="space-y-4">
                        <h3 class="text-xl font-semibold text-slate-100 group-hover:text-cyan-300 transition-colors duration-300">
                          {demo.title}
                        </h3>

                        {demo.description && (
                          <p class="text-slate-400 text-sm leading-relaxed line-clamp-3">
                            {demo.description}
                          </p>
                        )}

                        <div class="flex items-center justify-between pt-4 border-t border-slate-700/50">
                          <div class="flex items-center gap-2">
                            <div class="w-2 h-2 bg-green-500 rounded-full animate-pulse" />
                            <span class="text-xs text-green-400 font-medium">
                              Disponible
                            </span>
                          </div>

                          {videoId && (
                            <a
                              href={demo.url}
                              target="_blank"
                              rel="noopener noreferrer"
                              class="inline-flex items-center gap-2 px-3 py-1.5 bg-cyan-500/20 text-cyan-300 rounded-lg hover:bg-cyan-500/30 transition-colors duration-300 text-sm font-medium"
                            >
                              <svg
                                xmlns="http://www.w3.org/2000/svg"
                                class="w-4 h-4"
                                fill="none"
                                viewBox="0 0 24 24"
                                stroke="currentColor"
                              >
                                <path
                                  stroke-linecap="round"
                                  stroke-linejoin="round"
                                  stroke-width="2"
                                  d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
                                />
                              </svg>
                              Ver en YouTube
                            </a>
                          )}
                        </div>
                      </div>
                    </article>
                  );
                })}
            </div>
          )
        }
      </section>
    </div>
  </main>
  <Footer />
</Layout>

<script>
  import "@justinribeiro/lite-youtube";
</script>

<style>
  lite-youtube {
    background-color: #1e293b;
    border-radius: 0.75rem;
  }

  lite-youtube::before {
    content: "";
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    width: 68px;
    height: 48px;
    margin-left: -34px;
    margin-top: -24px;
    background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 68 48"><path fill="%23f00" d="M66.52,7.74c-0.78-2.93-2.49-5.41-5.42-6.19C55.79,.13,34,0,34,0S12.21,.13,6.9,1.55 C3.97,2.33,2.27,4.81,1.48,7.74C0.06,13.05,0,24,0,24s0.06,10.95,1.48,16.26c0.78,2.93,2.49,5.41,5.42,6.19 C12.21,47.87,34,48,34,48s21.79-0.13,27.1-1.55c2.93-0.78,4.64-3.26,5.42-6.19C67.94,34.95,68,24,68,24S67.94,13.05,66.52,7.74z"/><path d="M 45,24 27,14 27,34" fill="%23fff"/></svg>')
      no-repeat center;
    background-size: contain;
    transition: opacity 0.3s;
  }

  lite-youtube:hover::before {
    opacity: 0.8;
  }

  /* Estilos para truncar texto */
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
