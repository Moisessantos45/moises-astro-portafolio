---
interface Props {
  link: string;
  text: string;
  icon: "code" | "external-link" | "globe";
}

const { link, text, icon }: Props = Astro.props;
const iconMap = {
  code: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="16 18 22 12 16 6"></polyline><polyline points="8 6 2 12 8 18"></polyline></svg>`,
  "external-link": `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path><polyline points="15 3 21 3 21 9"></polyline><line x1="10" y1="14" x2="21" y2="3"></line></svg>`,
  globe: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line><path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"></path></svg>`,
};
---

<a
  href={link}
  target="_blank"
  rel="noopener noreferrer"
  class="flex items-center px-3 py-2 text-sm font-medium text-gray-600 bg-gray-100 rounded-lg hover:bg-cyan-500 hover:text-white transition-colors duration-300 group link-external"
>
  <span class="mr-2" set:html={iconMap[icon]} />
  {text}
</a>

<script>
  const links = document.querySelectorAll(
    ".link-external"
  ) as NodeListOf<HTMLAnchorElement>;
    
  links.forEach((link) => {
    link.addEventListener("click", (e) => {
      const elementA = e.target as HTMLAnchorElement;
      const href = elementA.getAttribute("href");
      if (href && href === "#") {
        e.preventDefault();
      }
    });
  });
</script>
